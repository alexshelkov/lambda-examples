frameworkVersion: ">= 3"

service: lambda-examples

useDotenv: true

package:
  patterns:
    - '!src/**'
    - '!**/node_modules/aws-sdk/**'
    - '!**/node_modules/@types/**'

custom:
  build: npm run ${env:SLS_BUILD, 'build'}

  scriptHooks:
    'deploy:function:initialize': ${self:custom.build}
    'package:initialize': ${self:custom.build}
    'invoke:local:loadEnvVars': ${self:custom.build}

  stage: ${opt:stage, env:STAGE, self:provider.stage}

plugins:
  - serverless-scriptable-plugin

provider:
  name: aws

  apiGateway:
    shouldStartNameWithService: true
    minimumCompressionSize: 1024

  runtime: nodejs14.x

  memorySize: 128

  environment:
    WEBHOOK_URL: ${env:WEBHOOK_URL}

functions:
  TestGet:
    handler: dist/handler/test/get.handle
    events:
      - http:
          path: test
          method: get

  TestPost:
    handler: dist/handler/test/post.handle
    events:
      - http:
          path: test
          method: post

  TestPostYup:
    handler: dist/handler/test/postYup.handle
    events:
      - http:
          path: test/yup
          method: post

  TestPostYupDynamic:
    handler: dist/handler/test/postYupDynamic.handle
    events:
      - http:
          path: test/yup/dyn
          method: post

  TestPostStruct:
    handler: dist/handler/test/postStruct.handle
    events:
      - http:
          path: test/struct
          method: post

  TestCache:
    handler: dist/handler/test/cache.handle
    events:
      - http:
          path: test/cache
          method: get
